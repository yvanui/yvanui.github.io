import{_ as a,c as t,o as s,a6 as e}from"./chunks/framework.d-Ywx6yJ.js";const o="/assets/002.C9BdpIzW.png",n="/assets/003.BcHOkaJ3.png",r="/assets/004.QcECIZrX.png",i="/assets/011.CaZd7Ijv.png",p="/assets/013.BtlTQvC8.png",c="/assets/005.Cz0fZ8Os.png",l="/assets/006.C8jE_q84.png",v=JSON.parse('{"title":"接口管理","description":"","frontmatter":{"title":"接口管理"},"headers":[],"relativePath":"yvanui/08_connector/03.md","filePath":"yvanui/08_connector/03.md"}'),_={name:"yvanui/08_connector/03.md"},d=e('<h1 id="新增接口" tabindex="-1">新增接口 <a class="header-anchor" href="#新增接口" aria-label="Permalink to &quot;新增接口&quot;">​</a></h1><p>在二开平台中找到“接口设计”功能，打开“接口设计”页面，在工具栏点击“新建接口”按钮，填写新建接口表单</p><p><img src="'+o+'" alt="" loading="lazy"></p><p>点击保存之后接口新增成功，此时接口处于未配置状态，打开接口设计详情页面，开始对新增的接口进行配置：接口定义、请求数据、响应数据等信息</p><p><img src="'+n+'" alt="" loading="lazy"></p><h1 id="编辑接口信息" tabindex="-1">编辑接口信息 <a class="header-anchor" href="#编辑接口信息" aria-label="Permalink to &quot;编辑接口信息&quot;">​</a></h1><p>编辑接口除了使用之前“新增接口”里提到的配置：接口定义、请求数据、响应数据等信息之外，还能直接以代码的形式编辑接口信息，通过这种方式可以直接复制之前的配置信息，粘贴过来稍作修改即可实现利用已配置好的接口代码快速完成新的接口配置</p><p><img src="'+r+'" alt="" loading="lazy"></p><p>在接口设计详情页面选中“接口示例”叶签，可以编写多个接口示例，描述当前接口对应的多种业务场景，让使用接口的人一目了然</p><p><img src="'+i+'" alt="" loading="lazy"></p><h1 id="实现接口逻辑" tabindex="-1">实现接口逻辑 <a class="header-anchor" href="#实现接口逻辑" aria-label="Permalink to &quot;实现接口逻辑&quot;">​</a></h1><p>接口的实现逻辑需要编写代码完成，按照接口详情中配置的“clazz@method”字段，创建对应了的Java 类和方法，实现接口逻辑，示例如下：</p><p><img src="'+p+'" alt="" loading="lazy"></p><h1 id="删除接口" tabindex="-1">删除接口 <a class="header-anchor" href="#删除接口" aria-label="Permalink to &quot;删除接口&quot;">​</a></h1><p>如果需要删除接口，可以根据接口名称过滤，找到对应的接口信息，如下图：</p><p><img src="'+c+'" alt="" loading="lazy"></p><p>找到接口之后点击鼠标右键，在弹出的菜单中选择删除，在弹出确认删除对话框中点击确认删除，即可删除接口</p><p><img src="'+l+'" alt="" loading="lazy"></p>',18),m=[d];function h(g,u,f,z,y,q){return s(),t("div",null,m)}const C=a(_,[["render",h]]);export{v as __pageData,C as default};
