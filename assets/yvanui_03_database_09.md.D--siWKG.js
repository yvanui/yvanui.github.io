import{_ as a,c as t,o as l,a6 as i}from"./chunks/framework.d-Ywx6yJ.js";const e="/assets/019.Syyy22jb.png",o="/assets/020.CNTNQj5I.png",b=JSON.parse('{"title":"其它","description":"","frontmatter":{"title":"其它"},"headers":[],"relativePath":"yvanui/03_database/09.md","filePath":"yvanui/03_database/09.md"}'),s={name:"yvanui/03_database/09.md"},p=i('<h1 id="刷新数据库元数据" tabindex="-1">刷新数据库元数据 <a class="header-anchor" href="#刷新数据库元数据" aria-label="Permalink to &quot;刷新数据库元数据&quot;">​</a></h1><p>在低代码平台的数据库设计模块中，“刷新数据库元数据”是一个关键功能，它旨在帮助用户保持数据库设计界面与实际数据库结构之间的一致性。这项功能对于应对数据库结构的实时变化、避免因信息滞后导致的错误至关重要。</p><p>功能目的</p><ul><li>同步更新：当数据库中的表结构发生改变（如字段添加、删除、修改等），通过刷新元数据，低代码平台能够及时反映出这些变化，确保设计界面与数据库现状保持一致。</li><li>预防错误：避免因数据库结构与设计界面不匹配导致的配置错误或数据操作异常，提升开发效率和应用稳定性。</li></ul><p><img src="'+e+'" alt="" loading="lazy"></p><p>操作步骤</p><ol><li>点击“刷新”按钮。平台将自动连接到数据库，查询最新的数据库架构信息。</li><li>刷新过程中，平台可能会显示加载或进度指示器，这期间请耐心等待。对于大型数据库或复杂结构，此过程可能需要一些时间。</li></ol><p>通过“刷新数据库元数据”功能，低代码平台的用户可以确保数据库设计工作基于最准确的信息进行，这对于维护数据模型的准确性和提高开发效率至关重要。</p><h1 id="重建数据库元数据" tabindex="-1">重建数据库元数据 <a class="header-anchor" href="#重建数据库元数据" aria-label="Permalink to &quot;重建数据库元数据&quot;">​</a></h1><p>在低代码平台的数据库设计领域，&quot;重建数据库元数据&quot;是一项高级功能，旨在帮助用户彻底重新加载并解析数据库的结构信息，以应对数据库结构发生重大变动或初次连接数据库时需要完整初始化的情况。此功能确保平台对数据库的理解与实际数据库状态完美同步，对于维护数据库模型的准确性和完整性至关重要。</p><p>功能目的</p><ul><li>全面更新：当数据库经历重大结构调整，如表结构大规模变动、索引重定义、视图或存储过程的增删改等，重建元数据可以一次性全面刷新这些信息。</li><li>首次连接：在首次配置连接至新数据库时，使用该功能可以确保平台正确初始化所有数据库对象的元数据信息。</li><li>解决不一致：若发现平台与数据库间的元数据信息不匹配，重建操作可作为解决同步问题的终极手段。</li></ul><p><img src="'+o+'" alt="" loading="lazy"></p><p>操作步骤</p><ol><li>点击“重建元数据”按钮，平台会显示确认对话框，提醒该操作将会覆盖当前缓存的数据库元数据信息，请仔细阅读并确认无误后继续。</li><li>点击确认后，平台将开始重新扫描并解析数据库的结构信息，此过程可能需要一段时间，具体取决于数据库的大小和复杂度。</li><li>重建完成后，平台会更新数据库包括表、字段等信息，用户应检查是否一切符合预期，确保无遗漏或错误。</li></ol><p>通过有效地利用重建数据库元数据功能，低代码平台用户可以确保数据库设计与实际数据库状态保持高度一致，为后续的开发和维护工作打下坚实的基础。</p>',16),_=[p];function n(r,c,d,u,h,m){return l(),t("div",null,_)}const y=a(s,[["render",n]]);export{b as __pageData,y as default};
