import{_ as a,c as t,o as s,a6 as o}from"./chunks/framework.d-Ywx6yJ.js";const e="/assets/007.hxHaOEea.png",n="/assets/008.Day90p2U.png",p="/assets/012.DjeMME7r.png",i="/assets/009.Co0ksNqE.png",r="/assets/010.ijFYnUJs.png",_="/assets/014.D94OGjDH.png",c="/assets/015.C2tDgK7q.png",x=JSON.parse('{"title":"接口发布和调试","description":"","frontmatter":{"title":"接口发布和调试"},"headers":[],"relativePath":"yvanui/08_connector/04.md","filePath":"yvanui/08_connector/04.md"}'),l={name:"yvanui/08_connector/04.md"},d=o('<h1 id="发布接口" tabindex="-1">发布接口 <a class="header-anchor" href="#发布接口" aria-label="Permalink to &quot;发布接口&quot;">​</a></h1><p>接口被创建之后默认处于未发布状态，如果需要发版，可以使用接口的发版功能实现接口的发布，如下在接口设计详情页面，点击“保存”下拉按钮，选择“保存并发布”即可发布接口，接口发布后才能被其它系统所调用</p><p><img src="'+e+'" alt="" loading="lazy"></p><p>发版成功之后会有明确的提示信息，如下：</p><p><img src="'+n+'" alt="" loading="lazy"></p><p>一般系统会有几十上百个接口，如果每个接口都需要单独发布必然会有大量维护工作，为了提高效率，可以使用系统提供的“发布全部接口”功能实现所有接口的一键发布，如下图：</p><p><img src="'+p+'" alt="" loading="lazy"></p><h1 id="调用调试接口" tabindex="-1">调用调试接口 <a class="header-anchor" href="#调用调试接口" aria-label="Permalink to &quot;调用调试接口&quot;">​</a></h1><p>当接口逻辑非常复杂需要调试接口，或者接口完成之后需要自测时，就可以使用系统提供的“测试运行”功能，测试开发的接口是否能正常工作，如下图：</p><p><img src="'+i+'" alt="" loading="lazy"></p><p>点击“发送”按钮，即可发送接口调用请求，稍等片刻之后就能看到调用结果如下：</p><p><img src="'+r+'" alt="" loading="lazy"></p><p>如果接口定义了请求参数，可以输入自定义的请求参数，如下图：</p><p><img src="'+_+'" alt="" loading="lazy"></p><p>如果遇到棘手的bug，可以在程序中断点调试接口逻辑，断点调试功能是查找接口中业务逻辑问题的最强大好用且高效的手段，如下图：</p><p><img src="'+c+'" alt="" loading="lazy"></p>',16),m=[d];function g(h,u,y,f,z,D){return s(),t("div",null,m)}const P=a(l,[["render",g]]);export{x as __pageData,P as default};
