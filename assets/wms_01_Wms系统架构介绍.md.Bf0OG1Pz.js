import{_ as s,c as a,o as n,a6 as i}from"./chunks/framework.d-Ywx6yJ.js";const l="/assets/Pasted%20image%2020240315202941.CTlJRvjr.png",p="/assets/Pasted%20image%2020240315202947.RN9CjAmA.png",e="/assets/Pasted%20image%2020240315202957.CyXFBS5n.png",r="/assets/Pasted%20image%2020240315203015.N1fi7rz_.png",t="/assets/Pasted%20image%2020240315203033.f1f_bQ9E.png",h="/assets/Pasted%20image%2020240315203041.BxHgram2.png",c="/assets/Pasted%20image%2020240315203046.Be6gOKjE.png",b="/assets/Pasted%20image%2020240315203050.BAp91Nf_.png",k="/assets/Pasted%20image%2020240315203055.Bqo8OK3U.png",d="/assets/Pasted%20image%2020240315203101.D71IrAR_.png",u="/assets/Pasted%20image%2020240315203105.CQEI5RQo.png",m="/assets/Pasted%20image%2020240315203118.C-N-koIl.png",o="/assets/Pasted%20image%2020240315203124.BW4_yBBc.png",g="/assets/Pasted%20image%2020240315203129.gLj5JKVr.png",E="/assets/Pasted%20image%2020240315203136.BjFx2wo8.png",y="/assets/Pasted%20image%2020240315203140.Bgo4ohmT.png",_="/assets/Pasted%20image%2020240315203145.DBhBmBGA.png",F="/assets/Pasted%20image%2020240315203150.mK92sQyR.png",C="/assets/Pasted%20image%2020240315203154.H5TOEK6F.png",q="/assets/Pasted%20image%2020240315203200.CA3WXouz.png",v="/assets/Pasted%20image%2020240315203204.DqBXQnbW.png",P="/assets/Pasted%20image%2020240315203208.DmmXoR9J.png",f="/assets/Pasted%20image%2020240315203213.D1igUQVH.png",D="/assets/Pasted%20image%2020240315203218.BEH8qy9U.png",A="/assets/Pasted%20image%2020240315203223.BRNEpVTU.png",B="/assets/Pasted%20image%2020240315203228.DHInORek.png",x="/assets/Pasted%20image%2020240315203232.B1duiRcb.png",w="/assets/Pasted%20image%2020240315203248.lOYfbEpY.png",S="/assets/Pasted%20image%2020240315203254.LIcoBKIm.png",z="/assets/Pasted%20image%2020240315203300.CzcLb_Xz.png",R="/assets/Pasted%20image%2020240315203317.B7SobJkP.png",O="/assets/Pasted%20image%2020240315203321.Bxn3uTSf.png",N="/assets/Pasted%20image%2020240315203325.DoxSvDRp.png",I="/assets/Pasted%20image%2020240315203330.DQm5etHp.png",W="/assets/Pasted%20image%2020240315203336.1StfpmcW.png",j="/assets/Pasted%20image%2020240315203342.CSpUmiDy.png",L="/assets/Pasted%20image%2020240315203346.DA-VF60Q.png",T="/assets/Pasted%20image%2020240315203349.DuZ49OJx.png",M="/assets/Pasted%20image%2020240315203433.BCPuaj5o.png",K="/assets/Pasted%20image%2020240315203438.C7nbLwIi.png",J="/assets/Pasted%20image%2020240315203426.BGHelMRE.png",H="/assets/Pasted%20image%2020240315203444.pBYXC37N.png",V="/assets/Pasted%20image%2020240315203451.D_OK2Oz0.png",Q="/assets/Pasted%20image%2020240315203456.S3RJQY1f.png",U="/assets/Pasted%20image%2020240315203507.Cyt5nX0z.png",G="/assets/Pasted%20image%2020240315203512.YHJmZ-Yz.png",X="/assets/Pasted%20image%2020240315203521.BHFt7dPY.png",Y="/assets/Pasted%20image%2020240315203525.4tfj6fx7.png",Z="/assets/Pasted%20image%2020240315203528.C43abp_G.png",$="/assets/Pasted%20image%2020240315203532.DHMbXWHS.png",ss="/assets/Pasted%20image%2020240315203542.D38esSJS.png",as="/assets/Pasted%20image%2020240315203546.Dvh4nq_R.png",ns="/assets/Pasted%20image%2020240315203550.7w86VagI.png",is="/assets/Pasted%20image%2020240315203556.BiMyc8Ox.png",ls="/assets/Pasted%20image%2020240315203602.Cz-xKRhJ.png",ps="/assets/Pasted%20image%2020240315203618.BySuJSUm.png",es="/assets/Pasted%20image%2020240315203623.Dq-F_Ypx.png",rs="/assets/Pasted%20image%2020240315203628.C9uE2m3u.png",ts="/assets/Pasted%20image%2020240315203633.vEaQhgxz.png",hs="/assets/Pasted%20image%2020240315203639.CdZfqxi-.png",cs="/assets/Pasted%20image%2020240315203643.UWFIkS0W.png",bs="/assets/Pasted%20image%2020240315203653.Buzz5Xa1.png",ks="/assets/Pasted%20image%2020240315203628.C9uE2m3u.png",ds="/assets/Pasted%20image%2020240315203703.Cby7R_gl.png",us="/assets/Pasted%20image%2020240315203708.CbX7ZCa2.png",ms="/assets/Pasted%20image%2020240315203712.CFEFGORh.png",os="/assets/Pasted%20image%2020240315203716.ZV0iJbIK.png",gs="/assets/Pasted%20image%2020240315203723.7GKpKkpY.png",Es="/assets/Pasted%20image%2020240315203730.BNXhPPXr.png",ys="/assets/Pasted%20image%2020240315203733.CyPI9HWT.png",_s="/assets/Pasted%20image%2020240315203738.kZ4izzGU.png",Fs="/assets/Pasted%20image%2020240315203742.Bm9nk5Sv.png",zs=JSON.parse('{"title":"Wms系统介绍","description":"","frontmatter":{"title":"Wms系统介绍","aliases":["SystemIntroduce","wms8.5"]},"headers":[],"relativePath":"wms/01_Wms系统架构介绍.md","filePath":"wms/01_Wms系统架构介绍.md"}'),Cs={name:"wms/01_Wms系统架构介绍.md"},qs=i('<h1 id="系统架构介绍" tabindex="-1">系统架构介绍 <a class="header-anchor" href="#系统架构介绍" aria-label="Permalink to &quot;系统架构介绍&quot;">​</a></h1><h2 id="系统介绍" tabindex="-1">系统介绍 <a class="header-anchor" href="#系统介绍" aria-label="Permalink to &quot;系统介绍&quot;">​</a></h2><p>仓储管理系统，管理仓库四堵墙以内的物流作业执行 技术选型：</p><ul><li>Vue3</li><li>JDK1.8</li><li>Gradle6.8</li><li>PostgreSQL14</li><li>Redis</li><li>MinIO</li><li>K8s</li></ul><p>组件：</p><ul><li>Vue3</li><li>ElementUI+</li><li>VAnt4</li><li>SpringBoot</li><li>Swagger3</li><li>MyBatis</li><li>QueryDSL</li><li>Jackson</li><li>OKHttp</li><li>Netty</li><li>Camunda</li><li>Socketio</li><li>Prometheus</li></ul><h2 id="框架组件" tabindex="-1">框架组件 <a class="header-anchor" href="#框架组件" aria-label="Permalink to &quot;框架组件&quot;">​</a></h2><ul><li>JDK 1.8</li><li>Gradle 6.8.3</li><li>PostgreSQL &gt;= 14.0 或同版本Paas服务</li><li>Mysql 8.0</li><li>Redis &gt;= 6.0或同版本Paas</li><li>MiniIO 4.x或S3兼容的对象存储Paas服务</li><li>Nacos &gt;= V2.0</li><li>ElasticSearch 8.x</li><li>Kubernetes v1.23.15</li><li>Rancher v2.6.9</li><li>Jenkins 2.361.1</li><li>Nexus3 3.47.1</li><li>Nginx 1.22.1</li><li>Harbor 2.7.0</li><li>Node 16.x</li><li>Yarn 1.22.19</li></ul><h2 id="应用架构" tabindex="-1">应用架构 <a class="header-anchor" href="#应用架构" aria-label="Permalink to &quot;应用架构&quot;">​</a></h2><p><img src="'+l+'" alt="" loading="lazy"></p><ul><li>基于微服务、云架构</li><li>基于二开平台，开发PC、移动端、大屏、查询报表功能</li><li>稳定基础功能，配合规则引擎，运转规则</li><li>基于无代码平台，开发基础资料和单据功能</li></ul><h2 id="开发分层" tabindex="-1">开发分层 <a class="header-anchor" href="#开发分层" aria-label="Permalink to &quot;开发分层&quot;">​</a></h2><p><img src="'+p+'" alt="" loading="lazy"></p><h2 id="运维架构" tabindex="-1">运维架构 <a class="header-anchor" href="#运维架构" aria-label="Permalink to &quot;运维架构&quot;">​</a></h2><p><img src="'+e+'" alt="" loading="lazy"></p><ol><li>Jenkins拉取云效GIT中的源码，借助gradle和nexus构建应用系统docker,并推送至Habor；</li><li>Rancher是K8s的管理界面，方便架构师和运维团队监控并维护服务集群；</li><li>K8s从Habor拉起指定版本镜像进行实例部署，并由K8s管理内部负载均衡策略，灰度策略、服务伸缩容、异地容灾都由K8s进行管理；</li><li>Wms-ui-pc / WMS-ui-mobile 是前端打包后的docker镜像，属于静态资源镜像；</li><li>WMS系统启动后将自生运行实例注册至nacos，服务之间的调用从nacos中获取服务列表；</li><li>WMS-Gateway是WMS后端服务接入口，Gateway读取nacos的服务列表，并进行后台服务请求的分发；</li><li>WMS需要PostgreSQL进行数据库管理；</li><li>WMS需要ElasticSearch进行索引管理；</li><li>WMS需要Minio进行文件的存储和管理；</li><li>WMS需要Redis管理缓存和授权数据；</li><li>WMS需要Kafka管理日志和消息队列；</li><li>xxl-job组件用来管理计划任务，并维护被调度任务的调度周期、任务触发、任务分片、负载均衡、失效转移、任务日志等；</li></ol><h2 id="实际部署案例" tabindex="-1">实际部署案例 <a class="header-anchor" href="#实际部署案例" aria-label="Permalink to &quot;实际部署案例&quot;">​</a></h2><p><img src="'+r+`" alt="" loading="lazy"></p><h1 id="项目结构介绍" tabindex="-1">项目结构介绍 <a class="header-anchor" href="#项目结构介绍" aria-label="Permalink to &quot;项目结构介绍&quot;">​</a></h1><h2 id="clone-代码" tabindex="-1">clone 代码 <a class="header-anchor" href="#clone-代码" aria-label="Permalink to &quot;clone 代码&quot;">​</a></h2><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://git.yvanui.com/jztd/wms85std</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="项目文件结构" tabindex="-1">项目文件结构 <a class="header-anchor" href="#项目文件结构" aria-label="Permalink to &quot;项目文件结构&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wms     </span></span>
<span class="line"><span>├── wms-ui-pc           // PC前端 [8185]</span></span>
<span class="line"><span>├── wms-ui-mobile       // 移动端前端 [8285]</span></span>
<span class="line"><span>├── wms-gateway         // 网关模块 [8088]</span></span>
<span class="line"><span>├── wms-api             // 接口模块</span></span>
<span class="line"><span>│       └── wms-api     // 系统接口</span></span>
<span class="line"><span>├── wms-common          // 通用模块</span></span>
<span class="line"><span>│       └── wms-core    // 核心模块</span></span>
<span class="line"><span>├── wms-modules         // 业务模块</span></span>
<span class="line"><span>│       └── wms-filemanager // 文件服务 [8081]</span></span>
<span class="line"><span>│       └── wms-print       // 打印服务 [8082]</span></span>
<span class="line"><span>│       └── wms-job         // 定时任务 [8083]</span></span>
<span class="line"><span>│       └── wms-system      // wms服务 [8085]</span></span>
<span class="line"><span>├──build.gradle             // 项目构建文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="推荐使用-intellij-idea-打开-wms-项目" tabindex="-1">推荐使用 IntelliJ IDEA 打开 WMS 项目 <a class="header-anchor" href="#推荐使用-intellij-idea-打开-wms-项目" aria-label="Permalink to &quot;推荐使用 IntelliJ IDEA 打开 WMS 项目&quot;">​</a></h2><ul><li>设置构建工具, 为了加快构建速度，建议进行如下设置</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Settings -&gt; Build -&gt; BuildTools -&gt; Gradle -&gt; Build and runusing 选择 IntelliJ IDEA</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>运行 StartWMS 项目</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wms-modules / wms-system / src / main / java / StartWMS 找到 main 函数运行即可</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>启动pc-ui 和 web pda</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yvan-vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wms-ui-pc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yvan-vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yvan-vue-mobile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wms-ui-nobile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yvan-vue-mobile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h1 id="数据库设计" tabindex="-1">数据库设计 <a class="header-anchor" href="#数据库设计" aria-label="Permalink to &quot;数据库设计&quot;">​</a></h1><p>表格命名规范</p><ul><li>bas_* 基础资料</li><li>doc_* 单据类</li><li>inv_* 库存类</li><li>sys_* 系统类</li><li>dev_* 开发辅助</li><li>rule_* 规则类</li><li>api_* 接口类</li><li>upload_* 上传类</li></ul><h2 id="基础资料" tabindex="-1">基础资料 <a class="header-anchor" href="#基础资料" aria-label="Permalink to &quot;基础资料&quot;">​</a></h2><p><img src="`+t+'" alt="" loading="lazy"></p><ul><li>基础资料基于无代码模式开发功能</li><li>批量修改、批量添加、批量删除、批量复制粘贴</li><li>数据刷新按钮</li><li>支持无感刷新（从服务器拉取数据，但保留分页、筛选、排序、保留选中状态、保留勾选状态）</li><li>支持父子记录</li><li>支持树形数据记录（Id-ParentId模式、GroupBy模式、层级串模式）</li><li>可以对字段自定义他的隐藏、显示，及调整显示顺序，调整完之后能并保存布局</li><li>字段支持规则式调整（基于某种界面规则，改变字段的所有属性）</li><li>字段支持权限控制</li><li>字段过多时，能以详情表单模式展示数据详情</li><li>数据行的复杂校验</li><li>级联删除、级联更新、级联新增</li><li>记录操作日志（用户、IP、操作时间、操作内容）</li><li>记录审计日志（用户、IP、操作时间、修改了那行记录、更改前的字段值、更改后字段值）</li><li>逻辑删除（需指定逻辑删除字段）</li><li>调整行顺序（基于某个排序字段）</li><li>分页，自定义页大小</li><li>导出Excel</li><li>导入Excel</li><li>快速筛选（前端筛选）</li><li>前端筛选（按字段筛选）</li><li>自定义后端查询条件</li><li>自定义后端排序条件</li><li>按钮字段 ActionColumn</li><li>序号字段 SeqColumn</li><li>勾选字段 CheckColumn</li><li>基于表达式的行样式</li><li>基于表达式的单元格样式</li><li>基于表达式的格式化</li><li>支持字典格式化</li><li>支持编辑器： <ul><li>文本框（正则校验）</li><li>数字框（支持小数、小数位数、最大值、最小值）</li><li>下拉框（下拉选项、多选、禁用项、树形下拉、为下拉选项编排颜色）</li><li>数据窗口（弹出窗口选择数据，并带入数据窗口中的其他字段）</li><li>日期框（最大值、最小值）</li><li>日期+时间输入框（最大值、最小值）</li><li>勾选（三态勾选、勾选值、不勾选值、中间态值）</li></ul></li><li>支持代码模式字段扩展</li><li>支持动态字段扩展</li></ul><h2 id="入库" tabindex="-1">入库 <a class="header-anchor" href="#入库" aria-label="Permalink to &quot;入库&quot;">​</a></h2><p><img src="'+h+'" alt="" loading="lazy"></p><h2 id="出库" tabindex="-1">出库 <a class="header-anchor" href="#出库" aria-label="Permalink to &quot;出库&quot;">​</a></h2><p><img src="'+c+'" alt="" loading="lazy"></p><h2 id="库内" tabindex="-1">库内 <a class="header-anchor" href="#库内" aria-label="Permalink to &quot;库内&quot;">​</a></h2><p><img src="'+b+'" alt="" loading="lazy"></p><h2 id="库存" tabindex="-1">库存 <a class="header-anchor" href="#库存" aria-label="Permalink to &quot;库存&quot;">​</a></h2><p><img src="'+k+'" alt="" loading="lazy"></p><h2 id="系统类" tabindex="-1">系统类 <a class="header-anchor" href="#系统类" aria-label="Permalink to &quot;系统类&quot;">​</a></h2><p><img src="'+d+'" alt="" loading="lazy"></p><hr><h1 id="规则体系" tabindex="-1">规则体系 <a class="header-anchor" href="#规则体系" aria-label="Permalink to &quot;规则体系&quot;">​</a></h1><p><img src="'+u+`" alt="" loading="lazy"></p><h3 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h3><blockquote><p>https://blog.csdn.net/weixin_53900003/article/details/126884498 https://blog.csdn.net/justlpf/article/details/127010130 https://www.xjishu.com/zhuanli/55/202210315058.html</p></blockquote><h3 id="规则引擎架构" tabindex="-1">规则引擎架构 <a class="header-anchor" href="#规则引擎架构" aria-label="Permalink to &quot;规则引擎架构&quot;">​</a></h3><p>规则引擎，全称为业务规则管理系统，由推理引擎发展而来，是一种嵌入在应用程序中的组件，实现了将业务决策从应用程序代码中分离出来，并使用预定义的语义模块编写业务决策。接受数据输入，解释业务规则，并根据业务规则做出业务决策</p><h2 id="凯乐士-wms-dsl-规则引擎特性" tabindex="-1">凯乐士 WMS-DSL 规则引擎特性 <a class="header-anchor" href="#凯乐士-wms-dsl-规则引擎特性" aria-label="Permalink to &quot;凯乐士 WMS-DSL 规则引擎特性&quot;">​</a></h2><ul><li>图形化编排规则；满足仓储管理人员，不需要懂技术可以修改作业模式；</li><li>保证性能，规则一旦编译成功，就可以脱离数据库运行规则，最大程度保证系统运行效率；</li><li>业务隔离，吧项目中经常变化的部分隔离出来，不影响程序主版本；</li><li>热更新，版本管理，升级管理，及回滚；规则一旦配置失败，可以回滚到上一个版本；配置和配置之间可以保证同步（不会发生更新一半）的情况；</li><li>保留分析日志；</li><li>回放规则的运行过程，图形化分析和展示流量情况；</li><li>规则逻辑复杂的时候可以打断点进行调试，面对异常复杂的配置时，不再是黑盒；</li><li>框架扩展能力强，并与Java互通，所有Java中的方法都可以被规则引擎调用；</li><li>规则引擎可监控，可动态变更；可以实现 WMS 一边运行，一边动态的修改作业模式的场景；最大化实现仓储作业灵活的目的</li></ul><h3 id="strategy-dsl" tabindex="-1">Strategy-DSL <a class="header-anchor" href="#strategy-dsl" aria-label="Permalink to &quot;Strategy-DSL&quot;">​</a></h3><div class="language-groovy vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.galaxis.wms.rule.domain.*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strategy {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strategyName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;策略名&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 引入环境变量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 在图形化编排时，能预先列出可用的上下文变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ruleImports </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        PROJ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 物流项目</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        OWNER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 货主</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 定义规则</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rule {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleCode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;规则编码&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;规则名&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 命中规则后是否中断执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleBreak </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 是否强制中断执行（无论是否匹配）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleBreakAny </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 规则属性（可用定义一些固定属性，方便程序取值）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        props </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 规则筛选属性（可用于固定模式下的过滤筛选）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        whenProp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            project_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10001</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // when 片段 返回类型 boolean, 用来判断当前规则是否适用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 当缺少 when 片段时，默认所有情况都适用(return true)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        when {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PROJ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">project_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OWNER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">owner_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // then 片段 function 返回类型 void，当规则适用时会执行此函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        then {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // yieldResult 方法，吧参数1加入到返回值中，规则引擎会持续运行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            yieldResult 参数1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 终止运行规则引擎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            yieldBreak()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 吧参数1加入到返回值中，并且终止规则引擎，后面的 rule 会被忽略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            returnResult 参数1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 抛出异常</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            throwError(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // rule 中可以无限嵌套 rule, 相当于 if 语句内部嵌套 if</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rule {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            when {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // rule 中可以无限嵌套 rule, 相当于 if 语句内部嵌套 if</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            rule {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 规则组，rule 在同一个组内可以接力执行, 无法跨组执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 规则组下可以定义不同的规则引入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    group {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleCode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;分组编码&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;分组名&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ruleImports </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        groupImports </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 规则组属性（可用于定义一些固定属性，方便程序取值）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        groupProps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 规则组筛选属性（可用于固定模式下的过滤筛选）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        groupWhenProp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            project_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10001</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // when 片段 返回类型 boolean, 用来判断当前规则组是否适用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        groupWhen {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rule {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. 同 rule</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br></div></div><p><img src="https://note.youdao.com/yws/res/30621/WEBRESOURCE5199ac99353ec640473df43baef4ffbb" alt="image.png" loading="lazy"></p><p>目前已包括（不限于）如下13套规则：</p><ul><li>系统参数规则</li><li>库存属性规则</li><li>上架规则</li><li>波次模板（出库模式）规则</li><li>出库分配规则</li><li>出库任务拆分规则</li><li>分播规则</li><li>集货规则</li><li>作业工位分配规则</li><li>界面规则</li><li>扩展属性规则</li><li>序号生成规则</li><li>条码管控规则</li></ul><p>GalaxisWMS 8.5 的规则使用灵活，配置稳定，主要归功于底层的规则引擎架构</p><p>规则引擎实现了将业务决策从应用程序代码中分离出来，并使用预定义的语义模块(DSL)编写业务决策。接受数据输入，解释业务规则，并根据业务规则做出业务决策；</p><h2 id="规则实例" tabindex="-1">规则实例 <a class="header-anchor" href="#规则实例" aria-label="Permalink to &quot;规则实例&quot;">​</a></h2><h3 id="中通服上架规则" tabindex="-1">中通服上架规则 <a class="header-anchor" href="#中通服上架规则" aria-label="Permalink to &quot;中通服上架规则&quot;">​</a></h3><p><img src="`+m+'" alt="" loading="lazy"></p><p><img src="'+o+'" alt="" loading="lazy"></p><p><img src="'+g+'" alt="" loading="lazy"></p><h3 id="中通服波次模板规则" tabindex="-1">中通服波次模板规则 <a class="header-anchor" href="#中通服波次模板规则" aria-label="Permalink to &quot;中通服波次模板规则&quot;">​</a></h3><p><img src="'+E+'" alt="" loading="lazy"></p><p><img src="'+y+'" alt="" loading="lazy"></p><p><img src="'+_+'" alt="" loading="lazy"></p><p><img src="'+F+'" alt="" loading="lazy"></p><p><img src="'+C+'" alt="" loading="lazy"></p><h3 id="中通服出库规则" tabindex="-1">中通服出库规则 <a class="header-anchor" href="#中通服出库规则" aria-label="Permalink to &quot;中通服出库规则&quot;">​</a></h3><p><img src="'+q+'" alt="" loading="lazy"></p><p><img src="'+v+'" alt="" loading="lazy"></p><p><img src="'+P+'" alt="" loading="lazy"></p><h3 id="中通服任务拆分规则" tabindex="-1">中通服任务拆分规则 <a class="header-anchor" href="#中通服任务拆分规则" aria-label="Permalink to &quot;中通服任务拆分规则&quot;">​</a></h3><p><img src="'+f+'" alt="" loading="lazy"></p><h3 id="中通服集货位分配规则" tabindex="-1">中通服集货位分配规则 <a class="header-anchor" href="#中通服集货位分配规则" aria-label="Permalink to &quot;中通服集货位分配规则&quot;">​</a></h3><p><img src="'+D+'" alt="" loading="lazy"></p><h3 id="中通服作业工位分配规则" tabindex="-1">中通服作业工位分配规则 <a class="header-anchor" href="#中通服作业工位分配规则" aria-label="Permalink to &quot;中通服作业工位分配规则&quot;">​</a></h3><p><img src="'+A+'" alt="" loading="lazy"></p><h3 id="中通服库存属性规则" tabindex="-1">中通服库存属性规则 <a class="header-anchor" href="#中通服库存属性规则" aria-label="Permalink to &quot;中通服库存属性规则&quot;">​</a></h3><p><img src="'+B+'" alt="" loading="lazy"></p><p><img src="'+x+`" alt="" loading="lazy"></p><h3 id="中航货到人拣货位分配规则" tabindex="-1">中航货到人拣货位分配规则 <a class="header-anchor" href="#中航货到人拣货位分配规则" aria-label="Permalink to &quot;中航货到人拣货位分配规则&quot;">​</a></h3><div class="language-groovy vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Strategy.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strategyName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;货到人拣货位分配规则&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    group {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        groupName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;立体库&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        when {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            LOC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">locat_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;立体库&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rule {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ruleName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;常规方案&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            when {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            then {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // bas_pick_station 货到人工作站基础资料表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      loc_id 货到人工作站关联的货位id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      station_id 工作站id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      staff_id 当前登录的员工</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      work_load 已处理工作量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      todo_load 待处理工作量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      area_id   库区id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //      group_name  分组名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                def</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> row </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jdbc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">queryFirst(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;select station_id from bas_pick_station where group_name=&#39;立体库&#39; order by todo_load asc, work_load asc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (row </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    throwException(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;无法分配出库站台&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                returnResult([</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LOC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loc_id,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  : row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">station_id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h3 id="中航出库流程规则" tabindex="-1">中航出库流程规则 <a class="header-anchor" href="#中航出库流程规则" aria-label="Permalink to &quot;中航出库流程规则&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Strategy.define {</span></span>
<span class="line"><span>    strategyName = &#39;出库拣货完成后执行&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    group {</span></span>
<span class="line"><span>        groupName = &quot;成品市场&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            ORDER.order_biz_type == &#39;成品出库&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    group {</span></span>
<span class="line"><span>        groupName = &quot;光电产品部&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            ORDER.order_biz_type == &#39;配套紧急出库&#39; &amp;&amp; OWNER.owner_name == &#39;光电产品部&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;紧急订单MES-立体库&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;立体库&#39; &amp;&amp; SO.priority == 10 // 是紧急订单</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                returnResult([</span></span>
<span class="line"><span>                        wait_collect: false,</span></span>
<span class="line"><span>                        agv         : [</span></span>
<span class="line"><span>                                from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                to  : WORKSHOP.agv_pos  // 车间工位</span></span>
<span class="line"><span>                        ]</span></span>
<span class="line"><span>                ])</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;紧急订单MES-多穿库&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;多穿库&#39; &amp;&amp; SO.priority == 10 // 是紧急订单</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                returnResult([</span></span>
<span class="line"><span>                        wait_collect: false,</span></span>
<span class="line"><span>                        agv         : [</span></span>
<span class="line"><span>                                from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                to  : WORKSHOP.agv_pos  // 车间工位</span></span>
<span class="line"><span>                        ]</span></span>
<span class="line"><span>                ])</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;紧急订单MES-CTU&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;CTU&#39; &amp;&amp; SO.priority == 10 // 是紧急订单</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                returnResult([</span></span>
<span class="line"><span>                        wait_collect: false,</span></span>
<span class="line"><span>                        agv         : [</span></span>
<span class="line"><span>                                from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                to  : WORKSHOP.agv_pos  // 车间工位</span></span>
<span class="line"><span>                        ]</span></span>
<span class="line"><span>                ])</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;紧急订单MES-平库&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;平库&#39; &amp;&amp; SO.priority == 10 // 是紧急订单</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                returnResult([</span></span>
<span class="line"><span>                        wait_collect: false,</span></span>
<span class="line"><span>                        agv         : [</span></span>
<span class="line"><span>                                from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                to  : WORKSHOP.agv_pos  // 车间工位</span></span>
<span class="line"><span>                        ]</span></span>
<span class="line"><span>                ])</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;配套出库-立体库-洁净物料&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;立体库&#39; &amp;&amp; SO.priority &lt; 10 &amp;&amp; SO.is_clean_item == &#39;0001&#39;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                // 从系统参数中，取洁净室 agv点位</span></span>
<span class="line"><span>                Long agvPos = Conv.asLong(SysParam.get(&#39;clean_room_agv_pos&#39;))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>                returnResult([</span></span>
<span class="line"><span>                        wait_collect: true,</span></span>
<span class="line"><span>                        agv         : [</span></span>
<span class="line"><span>                                from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                to  : agvPos</span></span>
<span class="line"><span>                        ]</span></span>
<span class="line"><span>                ])</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        rule {</span></span>
<span class="line"><span>            ruleName = &#39;配套出库-立体库-非洁净&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            when {</span></span>
<span class="line"><span>                LOC.locat_type == &#39;立体库&#39; &amp;&amp; SO.priority &lt; 10 &amp;&amp; SO.is_clean_item != &#39;0001&#39;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            then {</span></span>
<span class="line"><span>                // 判断车间缓存区是否够用</span></span>
<span class="line"><span>                // bas_buffer_info</span></span>
<span class="line"><span>                //      loc_id 缓存区关联的货位ID</span></span>
<span class="line"><span>                //      agv_pos 缓存位对应 AGV点位</span></span>
<span class="line"><span>                //      is_free 是否剩余</span></span>
<span class="line"><span>                Long freeScala = Conv.asLong(SysParam.get(&#39;buff_free_scala&#39;)) // 0.8</span></span>
<span class="line"><span>                List&lt;Map&gt; ret = jdbc.queryMany(&quot;select is_free, count(*) as cnt from bas_buffer_info group by is_free&quot;)</span></span>
<span class="line"><span>                def db = ret[0].cnt / (ret[1].cnt + ret[0].cnt)</span></span>
<span class="line"><span>                if (db &gt; freeScala) {</span></span>
<span class="line"><span>                    // 有缓存位</span></span>
<span class="line"><span>                    Long buff_agv_pos = Conv.asLong(SysParam.get(&#39;buff_agv_pos&#39;)) // 0.8</span></span>
<span class="line"><span>                    def agvRow = jdbc.queryFirst(&quot;select agv_pos from bas_buffer_info where is_free == &#39;0001&#39;&quot;)</span></span>
<span class="line"><span>                    returnResult([</span></span>
<span class="line"><span>                            wait_collect: true,</span></span>
<span class="line"><span>                            agv         : [</span></span>
<span class="line"><span>                                    from: PICK_STATION.agv_pos, // 货到人工作站</span></span>
<span class="line"><span>                                    to  : agvRow.agv_pos</span></span>
<span class="line"><span>                            ]</span></span>
<span class="line"><span>                    ])</span></span>
<span class="line"><span>                } else {</span></span>
<span class="line"><span>                    // 没有缓存位</span></span>
<span class="line"><span>                    returnResult([</span></span>
<span class="line"><span>                            wait_collect: true,</span></span>
<span class="line"><span>                            reback      : true, // 回立体库</span></span>
<span class="line"><span>                    ])</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    group {</span></span>
<span class="line"><span>        groupName = &quot;液冷事业部&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            ORDER.order_biz_type == &#39;配套紧急出库&#39; &amp;&amp; OWNER.owner_name == &#39;液冷事业部&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    group {</span></span>
<span class="line"><span>        groupName = &quot;制造二部&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            ORDER.order_biz_type == &#39;配套紧急出库&#39; &amp;&amp; OWNER.owner_name == &#39;制造二部&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br></div></div><h3 id="中航上架规则" tabindex="-1">中航上架规则 <a class="header-anchor" href="#中航上架规则" aria-label="Permalink to &quot;中航上架规则&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Strategy.define {</span></span>
<span class="line"><span>    strategyName = &#39;上架规则&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;写死货位&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            1 == 1</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    loc_id: 10000L</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;特殊库房&#39;</span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.intention == &#39;指定库房入库&#39; &amp;&amp; ITEM.jj_flag == true &amp;&amp; ITEM.whole == false &amp;&amp; DOC_ASN.target_area_id</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;平库&#39; and bas_location.wh_area_id == &quot; + DOC_ASN.target_area_id,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;扎堆算法&#39;,</span></span>
<span class="line"><span>                            &#39;空货位算法&#39;,</span></span>
<span class="line"><span>                            &#39;混放算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;立体库低货位找巷道&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.intention == &#39;立体库&#39; &amp;&amp; ITEM.whole == true &amp;&amp; ITEM.whole_height == 2</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;立体库&#39;&quot;,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;立体库均分算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;立体库高货位找巷道&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.intention == &#39;立体库&#39; &amp;&amp; ITEM.whole == true &amp;&amp; ITEM.whole_height == 1</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;立体库&#39; and bas_location.heigh_limit == &#39;height&#39;&quot;,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;立体库均分算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;立体库巷道内找货位&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.ltk_flag == true</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;立体库&#39; and bas_location.row = &quot; + DOC_ASN.ltk_row,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;立体库均分算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;多穿库&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.intention == &#39;多穿&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;多穿库&#39;&quot;,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;多穿库分配算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rule {</span></span>
<span class="line"><span>        ruleName = &#39;CTU&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        when {</span></span>
<span class="line"><span>            return DOC_ASN.intention == &#39;CTU&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        then {</span></span>
<span class="line"><span>            returnResult([</span></span>
<span class="line"><span>                    sqlLocWhere: &quot;bas_location_area.wh_area_type === &#39;CTU&#39;&quot;,</span></span>
<span class="line"><span>                    arg        : [</span></span>
<span class="line"><span>                            &#39;CTU分配算法&#39;</span></span>
<span class="line"><span>                    ]</span></span>
<span class="line"><span>            ])</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br></div></div><h1 id="源码结构" tabindex="-1">源码结构 <a class="header-anchor" href="#源码结构" aria-label="Permalink to &quot;源码结构&quot;">​</a></h1><p><img src="`+w+'" alt="" loading="lazy"></p><h1 id="二次开发平台" tabindex="-1">二次开发平台 <a class="header-anchor" href="#二次开发平台" aria-label="Permalink to &quot;二次开发平台&quot;">​</a></h1><h3 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h3><ul><li>基于 Vue3 框架</li><li>页面可视化设计、支持前后端一体化、快速开发</li><li>完全兼容 vue 原生写法，可以相互嵌套、互相引用</li><li>前端工程师、后台工程师、运维工程师都能维护，带代码提示功能</li><li>完全自主开发设计，30+基础组件，扩展方便</li><li>平台开发成果基于源码管理，便于版本和分支管理，便于复制粘贴、手动调整</li></ul><h3 id="进入二开" tabindex="-1">进入二开 <a class="header-anchor" href="#进入二开" aria-label="Permalink to &quot;进入二开&quot;">​</a></h3><p><img src="'+S+'" alt="" loading="lazy"></p><ol><li>系统登录之后，点击右上角账号，在下拉菜单中点击“凯乐士开发平台”进入二开平台；</li><li>在功能模块的抬头上，点击齿轮图标，也可进入当前模块的二开中</li><li>只有开发环境（本地启动的环境）才有进入开发平台的功能，测试和生产环境是没有这个菜单项的；</li></ol><p><img src="'+z+'" alt="" loading="lazy"></p><h3 id="主界面介绍" tabindex="-1">主界面介绍 <a class="header-anchor" href="#主界面介绍" aria-label="Permalink to &quot;主界面介绍&quot;">​</a></h3><p><img src="'+R+'" alt="" loading="lazy"></p><h3 id="数据库设计-1" tabindex="-1">数据库设计 <a class="header-anchor" href="#数据库设计-1" aria-label="Permalink to &quot;数据库设计&quot;">​</a></h3><p><img src="'+O+'" alt="" loading="lazy"></p><h3 id="枚举字典设计" tabindex="-1">枚举字典设计 <a class="header-anchor" href="#枚举字典设计" aria-label="Permalink to &quot;枚举字典设计&quot;">​</a></h3><p><img src="'+N+'" alt="" loading="lazy"></p><h3 id="数据字典设计" tabindex="-1">数据字典设计 <a class="header-anchor" href="#数据字典设计" aria-label="Permalink to &quot;数据字典设计&quot;">​</a></h3><p><img src="'+I+'" alt="" loading="lazy"></p><h3 id="功能开发过程演示" tabindex="-1">功能开发过程演示 <a class="header-anchor" href="#功能开发过程演示" aria-label="Permalink to &quot;功能开发过程演示&quot;">​</a></h3><p><img src="'+W+'" alt="" loading="lazy"></p><ul><li>新建的模块路径都是相对于 pages 文件夹的</li><li>功能名称必须是合法的文件名字: 英文+数字，如果带中文可能在不同的操作系统产生不可预计的bug，因此不推荐</li><li>系统内置2套PC模板：空布局、单表格, 选用不同的模板，会呈现不同的内容模板</li><li>无论采用何种布局，最好是将模块属性的&quot;自适应高度&quot;打开，才能保证内部的组件可以填充剩余高度，达到 height:100% 的效果</li></ul><h4 id="空布局" tabindex="-1">空布局 <a class="header-anchor" href="#空布局" aria-label="Permalink to &quot;空布局&quot;">​</a></h4><p><img src="'+j+'" alt="" loading="lazy"></p><h4 id="单表格" tabindex="-1">单表格 <a class="header-anchor" href="#单表格" aria-label="Permalink to &quot;单表格&quot;">​</a></h4><p><img src="'+L+'" alt="" loading="lazy"></p><h4 id="自适应高度" tabindex="-1">自适应高度 <a class="header-anchor" href="#自适应高度" aria-label="Permalink to &quot;自适应高度&quot;">​</a></h4><p><img src="'+T+'" alt="" loading="lazy"></p><h3 id="表格组件用法" tabindex="-1">表格组件用法 <a class="header-anchor" href="#表格组件用法" aria-label="Permalink to &quot;表格组件用法&quot;">​</a></h3><h4 id="给表格组件命名" tabindex="-1">给表格组件命名 <a class="header-anchor" href="#给表格组件命名" aria-label="Permalink to &quot;给表格组件命名&quot;">​</a></h4><p><img src="'+M+'" alt="" loading="lazy"></p><p><img src="'+K+'" alt="" loading="lazy"></p><h4 id="设置表格字段" tabindex="-1">设置表格字段 <a class="header-anchor" href="#设置表格字段" aria-label="Permalink to &quot;设置表格字段&quot;">​</a></h4><p>设置表格字段有4种方法：</p><ul><li>复制字段</li><li>拖拽字段</li><li>属性面板添加字段</li><li>从数据源自动分析字段</li></ul><h5 id="复制" tabindex="-1">复制 <a class="header-anchor" href="#复制" aria-label="Permalink to &quot;复制&quot;">​</a></h5><p><img src="'+J+'" alt="" loading="lazy"></p><h5 id="属性面板添加字段" tabindex="-1">属性面板添加字段 <a class="header-anchor" href="#属性面板添加字段" aria-label="Permalink to &quot;属性面板添加字段&quot;">​</a></h5><p><img src="'+H+'" alt="" loading="lazy"></p><h4 id="从数据源自动分析字段" tabindex="-1">从数据源自动分析字段 <a class="header-anchor" href="#从数据源自动分析字段" aria-label="Permalink to &quot;从数据源自动分析字段&quot;">​</a></h4><p><img src="'+V+'" alt="" loading="lazy"></p><p><img src="'+Q+'" alt="" loading="lazy"></p><h4 id="为表格设置数据源" tabindex="-1">为表格设置数据源 <a class="header-anchor" href="#为表格设置数据源" aria-label="Permalink to &quot;为表格设置数据源&quot;">​</a></h4><p>1.选中表格 2.切换到数据源面板 3.为SQL取名，并且SQL名称必须功能模块种唯一 4.点击编辑SQL按钮，填写 SQL <img src="'+U+'" alt="" loading="lazy"></p><h4 id="常见表格的代码" tabindex="-1">常见表格的代码 <a class="header-anchor" href="#常见表格的代码" aria-label="Permalink to &quot;常见表格的代码&quot;">​</a></h4><h5 id="刷新" tabindex="-1">刷新 <a class="header-anchor" href="#刷新" aria-label="Permalink to &quot;刷新&quot;">​</a></h5><p><img src="'+G+`" alt="" loading="lazy"></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.refs.grid1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="添加" tabindex="-1">添加 <a class="header-anchor" href="#添加" aria-label="Permalink to &quot;添加&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.refs.grid1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendEditRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field1: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field2: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.refs.grid1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeEditRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="保存" tabindex="-1">保存 <a class="header-anchor" href="#保存" aria-label="Permalink to &quot;保存&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.refs.grid1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveToServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="表单组件用法" tabindex="-1">表单组件用法 <a class="header-anchor" href="#表单组件用法" aria-label="Permalink to &quot;表单组件用法&quot;">​</a></h3><ul><li>拖拽表单, 并给表单一个名字(Reference)</li><li>拖拽字段编辑器，并编写“数据模型”属性</li><li>填写标签名</li><li>填写是否必填校验</li><li>校验和提交</li></ul><p><img src="`+X+'" alt="" loading="lazy"></p><p><img src="'+Y+'" alt="" loading="lazy"></p><p><img src="'+Z+'" alt="" loading="lazy"></p><p><img src="'+$+`" alt="" loading="lazy"></p><h4 id="表单校验和提交代码" tabindex="-1">表单校验和提交代码 <a class="header-anchor" href="#表单校验和提交代码" aria-label="Permalink to &quot;表单校验和提交代码&quot;">​</a></h4><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.refs.form1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 校验成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    system.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">invokeServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/foo/bar@saveData&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.form).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 保存成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        system.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;保存成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="数据双向绑定" tabindex="-1">数据双向绑定 <a class="header-anchor" href="#数据双向绑定" aria-label="Permalink to &quot;数据双向绑定&quot;">​</a></h3><ul><li>组件支持属性的双向绑定，比如 visible 属性基于某种计算公式</li><li>演示按钮的 visible / 下拉选项控制表单字段隐藏</li><li>演示表格选中行控制按钮 disabled 属性</li><li>演示父子表关联查询</li></ul><h3 id="扩展属性-库存属性见文档" tabindex="-1">扩展属性/库存属性见文档 <a class="header-anchor" href="#扩展属性-库存属性见文档" aria-label="Permalink to &quot;扩展属性/库存属性见文档&quot;">​</a></h3><h4 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h4><p>界面在设计开发完成之后，能够干预到界面的还有4套规则体系</p><p>扩展属性，借助字段扩展包，可以在已有的表格/表单上新增字段（保存的时候物理字段必须提前预留）；</p><p>界面规则，在不同的业务条件情况下，已有的表格/表单的字段可以被改成新的设定，并且能够为每个字段设定显示顺序；</p><p>库存属性，是指在不同的业务条件下，库存属性可以新增到已有的表单或表格中（库存属性字段可以在生产环境自由添加）；</p><p>界面权限，可以为不同的角色，指定功能模块下的指定字段禁用（多个角色合并时可以设定&quot;强制启用&quot;，覆盖多角色合并权限带来的问题）</p><h4 id="界面规则管理" tabindex="-1">界面规则管理 <a class="header-anchor" href="#界面规则管理" aria-label="Permalink to &quot;界面规则管理&quot;">​</a></h4><p><img src="`+ss+'" alt="" loading="lazy"></p><h4 id="扩展属性包管理" tabindex="-1">扩展属性包管理 <a class="header-anchor" href="#扩展属性包管理" aria-label="Permalink to &quot;扩展属性包管理&quot;">​</a></h4><p><img src="'+as+'" alt="" loading="lazy"></p><h4 id="库存属性" tabindex="-1">库存属性 <a class="header-anchor" href="#库存属性" aria-label="Permalink to &quot;库存属性&quot;">​</a></h4><p><img src="'+ns+'" alt="" loading="lazy"></p><h4 id="按钮级权限" tabindex="-1">按钮级权限 <a class="header-anchor" href="#按钮级权限" aria-label="Permalink to &quot;按钮级权限&quot;">​</a></h4><p><img src="'+is+'" alt="" loading="lazy"></p><h4 id="功能开发方法" tabindex="-1">功能开发方法 <a class="header-anchor" href="#功能开发方法" aria-label="Permalink to &quot;功能开发方法&quot;">​</a></h4><p>开发系统功能，需要注意如下方面</p><h5 id="开启界面权限" tabindex="-1">开启界面权限 <a class="header-anchor" href="#开启界面权限" aria-label="Permalink to &quot;开启界面权限&quot;">​</a></h5><p><img src="https://note.youdao.com/yws/res/29335/WEBRESOURCEe4e52278b8e5de1b607d4584e2371860" alt="image.png" loading="lazy"></p><ul><li>填写模块“标题”、并勾选了&quot;启用界面规则&quot;。完成这两步之后，就可以进入角色管理中的“界面权限”列表中了；</li><li>注意：并不是所有界面都要勾选“启用界面权限”；勾选过界面权限的模块，在打开之前，都会到服务端请求权限数据，会带来性能的影响；</li></ul><h5 id="启用界面规则" tabindex="-1">启用界面规则 <a class="header-anchor" href="#启用界面规则" aria-label="Permalink to &quot;启用界面规则&quot;">​</a></h5><p><img src="'+ls+'" alt="" loading="lazy"></p><ul><li>界面规则，主体是基于项目ID(project_id)作为判断依据的，都要在&quot;模块属性&quot;-&gt;界面规则请求体-&gt;添加请求参数</li><li>请求参数名可以不填写，请求参数体，就是 project_id 所在的表单体</li><li>并且在项目ID发生变化的时候，主动调用</li></ul><p><img src="'+ps+'" alt="" loading="lazy"></p><p><img src="'+es+'" alt="" loading="lazy"></p><h5 id="启用扩展属性" tabindex="-1">启用扩展属性 <a class="header-anchor" href="#启用扩展属性" aria-label="Permalink to &quot;启用扩展属性&quot;">​</a></h5><p>选中模块，填写 project_id 所在的表单的前缀</p><p><img src="https://note.youdao.com/yws/res/29353/WEBRESOURCEda2c620bbd0ddc3c5ee7a5f4b20f3a66" alt="image.png" loading="lazy"></p><p>在所在表单，填写 uiBlock属性</p><p><img src="'+rs+'" alt="" loading="lazy"></p><p><img src="'+ts+'" alt="" loading="lazy"></p><p>第三步，拖拽字段插槽，属性名填“扩展字段”，并填写扩展属性前缀</p><p><img src="'+hs+'" alt="" loading="lazy"></p><p><img src="'+cs+`" alt="" loading="lazy"></p><h5 id="统一校验方法-validateforms" tabindex="-1">统一校验方法 validateForms() <a class="header-anchor" href="#统一校验方法-validateforms" aria-label="Permalink to &quot;统一校验方法 validateForms()&quot;">​</a></h5><ul><li>为了保持扩展字段的校验逻辑能生效，统一校验方法为: this.validateForms()</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateForms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;校验通过&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+bs+'" alt="" loading="lazy"></p><h5 id="启用动态库存属性" tabindex="-1">启用动态库存属性 <a class="header-anchor" href="#启用动态库存属性" aria-label="Permalink to &quot;启用动态库存属性&quot;">​</a></h5><p><img src="'+ks+'" alt="" loading="lazy"></p><p><img src="'+ds+'" alt="" loading="lazy"></p><h3 id="源码结构-1" tabindex="-1">源码结构 <a class="header-anchor" href="#源码结构-1" aria-label="Permalink to &quot;源码结构&quot;">​</a></h3><p><img src="'+us+'" alt="" loading="lazy"></p><p><img src="'+ms+'" alt="" loading="lazy"></p><p><img src="'+os+`" alt="" loading="lazy"></p><ul><li>二开生成的文件分为4个</li><li>xxxx.vue, 为Vue前端文件，一般情况无需理会，除非需要手动开发Vue模块，或超大的方法，Vue种编写的所有方法和属性，可以与二开环境互通</li><li>xxxx.groovy 后端逻辑文件，前端通过API system.invokeServer(&#39;路径@方法名&#39;).then(ret=&gt;{}) 进行调用</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">invokeServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;路径@方法名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret.success) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        system.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;调用成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>xxxx.xml 存储 sql 语句文件</li><li>xxxx.design.js 文件，二开设计器设计的源码文件 <img src="`+gs+'" alt="" loading="lazy"></li></ul><h3 id="二开源码及扩展" tabindex="-1">二开源码及扩展 <a class="header-anchor" href="#二开源码及扩展" aria-label="Permalink to &quot;二开源码及扩展&quot;">​</a></h3><ul><li>任何 Vue 组件甚至 HTML 元素都可以封装变成组件</li><li>扩展1个组件，需要编写3个文件+1处修改</li><li>编写 yv-design-xxx.vue 组件，用于在设计器中展示组件</li><li>编写 yv-design-xxx-prop.vue 组件，用于展示属性面板</li><li>编写 yv-vjson-button.vue 组件，用于在运行时展示组件</li><li>修改 yv-designer-toolbox-config.js ,在工具箱中展示组件</li></ul><p><img src="'+Es+'" alt="" loading="lazy"></p><p><img src="'+ys+'" alt="" loading="lazy"></p><p><img src="'+_s+'" alt="" loading="lazy"></p><p><img src="'+Fs+'" alt="" loading="lazy"></p><p><a href="/02_命名规范.html">02_命名规范</a></p>',209),vs=[qs];function Ps(fs,Ds,As,Bs,xs,ws){return n(),a("div",null,vs)}const Rs=s(Cs,[["render",Ps]]);export{zs as __pageData,Rs as default};
