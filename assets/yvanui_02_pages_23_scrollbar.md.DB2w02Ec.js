import{_ as t,c as d,o as e,a6 as a}from"./chunks/framework.d-Ywx6yJ.js";const l="/assets/img.Dqd0pjnL.png",_=JSON.parse('{"title":"滚动条 scrollbar","description":"","frontmatter":{"title":"滚动条 scrollbar"},"headers":[],"relativePath":"yvanui/02_pages/23_scrollbar.md","filePath":"yvanui/02_pages/23_scrollbar.md"}'),r={name:"yvanui/02_pages/23_scrollbar.md"},i=a('<h1 id="滚动条-scrollbar-组件" tabindex="-1">滚动条 scrollbar 组件 <a class="header-anchor" href="#滚动条-scrollbar-组件" aria-label="Permalink to &quot;滚动条 scrollbar 组件&quot;">​</a></h1><p>scrollbar组件滚动条作为用户界面设计中的基本组件,用于替换浏览器原生滚动条。常用于容器类组件添加滚动效果。</p><h4 id="功能描述" tabindex="-1">功能描述 <a class="header-anchor" href="#功能描述" aria-label="Permalink to &quot;功能描述&quot;">​</a></h4><ol><li>滚动条允许用户浏览和访问超出当前可视区域的内容，如长文本、大型表格、图像库等。它们提供了一种直观的方式来管理和操作大量内容，使得用户可以精确地定位到所需部分。</li><li>滚动条帮助管理界面上的空间，通过动态显示或隐藏，仅在内容超出视图时才显示。这有助于保持界面的整洁性和可用性。</li><li>根据用户当前的日期时间填充默认值，方便用户选择或直接使用当前时间。</li><li>滚动条的状态变化（如拖动滑块或点击轨道）提供了实时的反馈，告知用户他们当前在内容中的位置以及可滚动的剩余空间。</li><li>通过优化滚动条的响应速度和动画效果，可以提升用户感知到的界面流畅度和操作的即时性。</li><li>有效地管理和优化滚动条的渲染和交互，以减少对浏览器性能的负面影响，特别是在处理大量内容或复杂动画时。</li><li>滚动条在主流浏览器中通常有良好的兼容性，简化了开发人员在项目中集成和定制滚动条的工作。</li></ol><h4 id="示例显示" tabindex="-1">示例显示 <a class="header-anchor" href="#示例显示" aria-label="Permalink to &quot;示例显示&quot;">​</a></h4><p><img src="'+l+'" alt="" loading="lazy"></p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><p>调用组件的事件，同上button组件</p><table><thead><tr><th style="text-align:left;">事件名称</th><th>说明</th><th>参数和示例</th></tr></thead><tbody><tr><td style="text-align:left;">--</td><td>--</td><td>--</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">方法名称</th><th>说明</th><th>参数和示例</th></tr></thead><tbody><tr><td style="text-align:left;">--</td><td>--</td><td>--</td></tr></tbody></table><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">属性名称</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td style="text-align:left;">reference</td><td>设置组件的refs</td><td>refs:scrollbar1</td></tr><tr><td style="text-align:left;">heightMode</td><td>设置高度模式,分为fix（固定）,fit（填满）,如果要设置固定高度，需要结合height属性使用</td><td>heightMode:&#39;fix&#39;</td></tr><tr><td style="text-align:left;">minHeight</td><td>设置组件的最小高度，默认为无</td><td>minHeight:&#39;&#39;</td></tr><tr><td style="text-align:left;">maxHeight</td><td>设置组件的最大的高度，默认为无</td><td>maxHeight:&#39;&#39;</td></tr><tr><td style="text-align:left;">paddingTop</td><td>距上的内边距，默认为0</td><td>paddingTop:5</td></tr><tr><td style="text-align:left;">paddingRight</td><td>距右的内边距，默认为0</td><td>paddingRight:5</td></tr><tr><td style="text-align:left;">paddingBottom</td><td>距下的内边距，默认为0</td><td>paddingBottom:5</td></tr><tr><td style="text-align:left;">paddingLeft</td><td>距左的内边距，默认为0</td><td>paddingLeft:5</td></tr><tr><td style="text-align:left;">marginTop</td><td>距上的内边距，默认为0</td><td>paddingTop:5</td></tr><tr><td style="text-align:left;">marginRight</td><td>距右的内边距，默认为0</td><td>paddingRight:5</td></tr><tr><td style="text-align:left;">marginBottom</td><td>距下的内边距，默认为0</td><td>paddingBottom:5</td></tr><tr><td style="text-align:left;">marginLeft</td><td>距左的内边距，默认为0</td><td>paddingLeft:5</td></tr><tr><td style="text-align:left;">cssBackgroundColor</td><td>设置整个组件的背景色，默认为none</td><td>cssBackgroundColor:&quot;#722ed1&quot;</td></tr></tbody></table>',13),o=[i];function n(s,h,g,c,f,p){return e(),d("div",null,o)}const x=t(r,[["render",n]]);export{_ as __pageData,x as default};
