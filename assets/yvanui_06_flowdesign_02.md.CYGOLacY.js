import{_ as a,c as t,o as s,a6 as i}from"./chunks/framework.d-Ywx6yJ.js";const e="/assets/001.BzQKf_-7.png",l="/assets/002.D7qM-Ttb.png",o="/assets/003.D5DPR3kx.png",n="/assets/004.B5k9YwGL.png",r="/assets/005.DgY1bi_p.png",_="/assets/006.CU5urHa8.png",c="/assets/007.Bch-7UlL.png",d="/assets/008.9DOC1JBg.png",p="/assets/009.B_xCNlQL.png",z=JSON.parse('{"title":"示例","description":"","frontmatter":{"title":"示例"},"headers":[],"relativePath":"yvanui/06_flowdesign/02.md","filePath":"yvanui/06_flowdesign/02.md"}'),h={name:"yvanui/06_flowdesign/02.md"},m=i('<h1 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h1><h2 id="实现设备搬运可配置的应用" tabindex="-1">实现设备搬运可配置的应用 <a class="header-anchor" href="#实现设备搬运可配置的应用" aria-label="Permalink to &quot;实现设备搬运可配置的应用&quot;">​</a></h2><p><img src="'+e+'" alt="" loading="lazy"></p><h3 id="流程介绍" tabindex="-1">流程介绍 <a class="header-anchor" href="#流程介绍" aria-label="Permalink to &quot;流程介绍&quot;">​</a></h3><p>在wms的自动化仓库中，有很多时候会对接设备来实现物料的搬运转移，而对接的设备会有很多不同类型的控制系统以及流程。 这个例子是在顺德大参林中PTR收货的设备流程</p><p>流程描述:</p><ol><li>在收货业务中，确定了托盘容器的目的位置，然后发起一个PTR搬运流程</li><li>流程第一个节点是生成对应设备要执行任务的相关数据，关键数据有 容器号、起始点位、目标点位、设备类型、控制系统、优先级等</li><li>在上个节点中生成的数据，会由统一的定时任务发送给设备控制系统</li><li>生成设备指令后，流程会等待在 等待设备回调 节点。</li><li>当收到设备系统的回调后，会依次执行更新 指令状态、库存转移等过程节点任务</li><li>流程来到排他网关，判断设备回调是否标记搬运已经完成，如果已经完成则流程结束，如果未完成则流程会继续等待下次设备回调，直到完成</li></ol><h3 id="关键节点的配置" tabindex="-1">关键节点的配置 <a class="header-anchor" href="#关键节点的配置" aria-label="Permalink to &quot;关键节点的配置&quot;">​</a></h3><p><img src="'+l+'" alt="" loading="lazy"><img src="'+o+'" alt="" loading="lazy"><img src="'+n+'" alt="" loading="lazy"></p><h4 id="弹出接口列表" tabindex="-1">弹出接口列表 <a class="header-anchor" href="#弹出接口列表" aria-label="Permalink to &quot;弹出接口列表&quot;">​</a></h4><p><img src="'+r+'" alt="" loading="lazy"></p><h4 id="选择接口" tabindex="-1">选择接口 <a class="header-anchor" href="#选择接口" aria-label="Permalink to &quot;选择接口&quot;">​</a></h4><p><img src="'+_+'" alt="" loading="lazy"><img src="'+c+'" alt="" loading="lazy"><img src="'+d+'" alt="" loading="lazy"><img src="'+p+'" alt="" loading="lazy"></p>',13),g=[m];function u(f,b,q,P,y,x){return s(),t("div",null,g)}const T=a(h,[["render",u]]);export{z as __pageData,T as default};
