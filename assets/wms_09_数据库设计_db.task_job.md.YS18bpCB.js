import{_ as a,c as e,J as r,w as s,m as t,a as o,a6 as _,G as n,o as i}from"./chunks/framework.d-Ywx6yJ.js";const y=JSON.parse('{"title":"task_job","description":"","frontmatter":{"title":"task_job","desc":"定时任务","category":"基础数据","type":"db","tags":["wms/db/基础数据"]},"headers":[],"relativePath":"wms/09_数据库设计/db.task_job.md","filePath":"wms/09_数据库设计/db.task_job.md"}'),c={name:"wms/09_数据库设计/db.task_job.md"},l=t("h1",{id:"title",tabindex:"-1"},[o("title "),t("a",{class:"header-anchor",href:"#title","aria-label":'Permalink to "title"'},"​")],-1),h=t("p",null,"定时任务",-1),b=_('<h1 id="字段" tabindex="-1">字段 <a class="header-anchor" href="#字段" aria-label="Permalink to &quot;字段&quot;">​</a></h1><table><thead><tr><th>字段名</th><th>类型</th><th>大小</th><th>注释</th><th>主键</th><th>非空</th><th>关联</th></tr></thead><tbody><tr><td>id</td><td>int8</td><td></td><td>主键id</td><td>√</td><td>√</td><td></td></tr><tr><td>namespace</td><td>varchar</td><td>63</td><td>命名空间</td><td></td><td>√</td><td></td></tr><tr><td>name</td><td>varchar</td><td>127</td><td>任务名称</td><td></td><td>√</td><td></td></tr><tr><td>type</td><td>int2</td><td></td><td>任务类型，1：http调用，2：java调用，3：js脚本，4：shell脚本</td><td></td><td>√</td><td></td></tr><tr><td>max_reentry</td><td>int2</td><td></td><td>最大重入执行数量(对于单个节点当前任务未执行完成就触发了下一次执行导致任务重入执行)，小于等于0：表示禁止重入执行</td><td></td><td>√</td><td></td></tr><tr><td>allow_concurrent</td><td>int2</td><td></td><td>是否允许多节点并发执行，使用悲观锁实现，不建议禁止，0：禁止，1：允许</td><td></td><td>√</td><td></td></tr><tr><td>max_retry_count</td><td>int4</td><td></td><td>执行失败时的最大重试次数</td><td></td><td>√</td><td></td></tr><tr><td>route_strategy</td><td>int2</td><td></td><td>路由策略，0：不启用，1：指定节点优先，2：固定节点白名单，3：固定节点黑名单</td><td></td><td>√</td><td></td></tr><tr><td>first_scheduler</td><td>varchar</td><td>2047</td><td>路由策略，1-指定节点优先，调度器名称集合</td><td></td><td></td><td></td></tr><tr><td>whitelist_scheduler</td><td>varchar</td><td>2047</td><td>路由策略，2-固定节点白名单，调度器名称集合</td><td></td><td></td><td></td></tr><tr><td>blacklist_scheduler</td><td>varchar</td><td>2047</td><td>路由策略，3-固定节点黑名单，调度器名称集合</td><td></td><td></td><td></td></tr><tr><td>load_balance</td><td>int2</td><td></td><td>负载均衡策略，1：抢占，2：随机，3：轮询，4：一致性HASH</td><td></td><td>√</td><td></td></tr><tr><td>is_update_data</td><td>int2</td><td></td><td>是否更新任务数据，0：不更新，1：更新</td><td></td><td>√</td><td></td></tr><tr><td>job_data</td><td>text</td><td></td><td>任务数据(json格式)</td><td></td><td></td><td></td></tr><tr><td>run_count</td><td>int8</td><td></td><td>运行次数</td><td></td><td>√</td><td></td></tr><tr><td>disable</td><td>int2</td><td></td><td>是否禁用：0-启用，1-禁用</td><td></td><td>√</td><td></td></tr><tr><td>description</td><td>varchar</td><td>511</td><td>描述</td><td></td><td></td><td></td></tr><tr><td>create_at</td><td>timestamp</td><td></td><td>创建时间</td><td></td><td>√</td><td></td></tr><tr><td>update_at</td><td>timestamp</td><td></td><td>更新时间</td><td></td><td></td><td></td></tr></tbody></table>',2);function m(p,u,f,k,v,j){const d=n("YvCallOut");return i(),e("div",null,[l,r(d,{type:"dbtable",title:"task_job"},{default:s(()=>[h]),_:1}),b])}const w=a(c,[["render",m]]);export{y as __pageData,w as default};
