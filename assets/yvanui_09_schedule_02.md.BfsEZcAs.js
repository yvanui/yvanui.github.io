import{_ as l,c as i,o as a,a6 as t}from"./chunks/framework.d-Ywx6yJ.js";const e="/assets/002.DQ7plP_1.png",s="/assets/007.tCTtTde4.png",o="/assets/003.Z4eNcBhu.png",r="/assets/004.DI4xWU3a.png",x=JSON.parse('{"title":"计划任务管理","description":"","frontmatter":{"title":"计划任务管理"},"headers":[],"relativePath":"yvanui/09_schedule/02.md","filePath":"yvanui/09_schedule/02.md"}'),n={name:"yvanui/09_schedule/02.md"},p=t('<h1 id="新增定时任务" tabindex="-1">新增定时任务 <a class="header-anchor" href="#新增定时任务" aria-label="Permalink to &quot;新增定时任务&quot;">​</a></h1><p>在二开平台中找到“计划任务”功能，打开“计划任务”页面，在工具栏点击“新建任务”按钮，填写新建接口表单</p><p><img src="'+e+'" alt="" loading="lazy"></p><p>在低代码平台中创建定时任务时，您需要填写一系列关键信息来定义任务的特性和行为。下面是对定时任务表单各个字段的详细说明，这将帮助您更好地理解和配置定时任务。</p><ol><li>命名空间（Namespace）</li></ol><ul><li>说明: 命名空间用于组织和区分不同的任务组或任务类别，确保任务标识的唯一性，尤其是在大型项目或团队合作中尤为重要。</li><li>示例: com.example.dailyTasks</li></ul><ol start="2"><li>任务名称（Task Name）</li></ol><ul><li>说明: 给定任务的一个明确且易于理解的名字，方便日后管理和识别。</li><li>示例: 每日销售数据汇总</li></ul><ol start="3"><li>JavaClass</li></ol><ul><li>说明: 对于基于Java的任务，这里需要填写包含实际执行逻辑的类的全限定名。此字段适用于支持Java插件或自定义任务的低代码平台。</li><li>示例: com.example.tasks.SalesDataAggregator</li></ul><ol start="4"><li>方法名（Method Name）</li></ol><ul><li>说明: 指定上述类中要调用的方法名，即任务执行的具体入口点。</li><li>示例: aggregateDailySalesData</li></ul><ol start="5"><li>状态（Status）</li></ol><ul><li>说明: 定义任务当前的状态，如启用(Enabled)或禁用(Disabled)。启用的任务会按照设定的时间规则执行，禁用则不会。</li><li>选项: Enabled 或 Disabled</li></ul><ol start="6"><li>触发类型（Trigger Type）</li></ol><ul><li>说明: 选择任务的触发机制。通常包括Cron表达式和固定间隔两种。</li><li>Cron表达式: 用于定义复杂的时间调度规则。</li><li>固定间隔: 设置任务执行的固定时间间隔。</li></ul><ol start="7"><li>Cron表达式（Cron Expression）</li></ol><ul><li>说明: 当选择Cron表达式作为触发类型时，需填写此字段。Cron表达式是一种用于配置计划任务执行时间的字符串格式，支持分钟、小时、日期、月份、星期等维度的精确时间控制。</li><li>示例: 0 0 1 * * ? 表示每天凌晨1点执行。</li></ul><ol start="8"><li>间隔时间（Interval Time）</li></ol><ul><li>说明: 当选择固定间隔作为触发类型时，需要设置任务执行的间隔时间（单位通常为秒、分钟、小时等）。例如，若设置为30 0 * * * ?，则意味着每30分钟执行一次。</li><li>示例: 5 minutes 表示每5分钟执行一次。</li></ul><ol start="9"><li>错过补发（Missed Execution Compensation）</li></ol><ul><li>说明: 指定如果任务因为某种原因错过预定执行时间，是否需要在下一次执行前补发执行。此选项有助于确保任务的连续性和完整性。</li><li>选项: Yes 或 No</li></ul><ol start="10"><li>最大重试（Max Retries）</li></ol><ul><li>说明: 如果任务执行失败，设置最大尝试执行的次数。超过此次数后，任务将不再自动重试。</li><li>示例: 3 表示失败后最多重试3次。</li></ul><ol start="11"><li>描述（Description）</li></ol><ul><li>说明: 对任务目的和执行逻辑的简短描述，有助于其他用户或管理员快速理解任务背景。</li><li>示例: 汇总前一天的销售数据，并将结果邮件发送至销售部门。</li></ul><p>通过以上字段的详细配置，您可以灵活且精准地定义低代码平台上的定时任务，满足多样化的自动化需求。</p><p>配置完成之后需要，实现之前配置的JavaClass和方法名，这里的实现示例如下：</p><p><img src="'+s+'" alt="" loading="lazy"></p><h1 id="更新定时任务" tabindex="-1">更新定时任务 <a class="header-anchor" href="#更新定时任务" aria-label="Permalink to &quot;更新定时任务&quot;">​</a></h1><p>如果需要更新定时任务，如：触发类型、Cron表达式、间隔时间、启用/禁用 等配置，可以直接选择需要更新的任务，然后点击“编辑”按钮，在弹出的表单对话框中修改定时任务配置，编辑完成保存之后即可生效，如下图:</p><p><img src="'+o+'" alt="" loading="lazy"></p><h1 id="删除定时任务" tabindex="-1">删除定时任务 <a class="header-anchor" href="#删除定时任务" aria-label="Permalink to &quot;删除定时任务&quot;">​</a></h1><p>当不需要某个定时任务了，可以直接删除这个任务，操作如下图：</p><p><img src="'+r+'" alt="" loading="lazy"></p>',35),u=[p];function c(_,d,m,h,g,C){return a(),i("div",null,u)}const f=l(n,[["render",c]]);export{x as __pageData,f as default};
