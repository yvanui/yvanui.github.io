import{_ as a,a as i}from"./chunks/004.ChfE39eH.js";import{_ as t,c as e,o as l,a6 as o}from"./chunks/framework.d-Ywx6yJ.js";const s="/assets/001.BBJI36qu.png",r="/assets/005.GSwAGziN.png",_="/assets/002.D1a6EGDR.png",q=JSON.parse('{"title":"数据窗口","description":"","frontmatter":{"title":"数据窗口"},"headers":[],"relativePath":"yvanui/05_widget/01_index.md","filePath":"yvanui/05_widget/01_index.md"}'),n={name:"yvanui/05_widget/01_index.md"},p=o('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>在低代码平台的开发环境中，数据窗口是一种高度灵活的数据管理与展示组件，相较于数据字典，它提供了更为丰富的定制能力和动态数据处理功能，大大增强了应用程序的灵活性和实用性。以下是数据窗口功能的详细阐述，以及与数据字典的对比说明：</p><p>数据窗口的核心优势</p><ol><li>动态列展示： 数据窗口能够根据用户定义的SQL查询结果动态展示多列数据，不受固定结构的限制。这意味着，无论是单列的关键信息展示还是多维度数据分析，数据窗口都能轻松应对，满足多样化数据展示需求。</li><li>高级查询功能：数据窗口支持设置多个查询条件，包括但不限于等值、范围、模糊匹配等，用户可以根据实际需求灵活组合过滤条件，快速定位所需数据。这种灵活性极大提升了数据筛选的精准度和效率。</li><li>多字段回填：当数据窗口用于表单字段或表格列的值选择时，它可以一次性回填多个相关字段到表单或记录中，减少了用户手动输入的工作量，提升了数据录入的效率和准确性。</li></ol><p>与数据字典的对比</p><ol><li>共性应用：数据窗口和数据字典都作为数据源，广泛应用于表单字段和表格列的配置中，简化了数据绑定过程，提升了开发效率。</li><li>灵活性差异：数据字典通常提供的是预定义的、静态的数据集合，其列数和内容相对固定，适用于简单且不变的选项列表。而数据窗口则通过动态SQL查询，打破了这种静态限制，能够适应更加复杂多变的数据需求场景。</li></ol><p><img src="'+s+'" alt="" loading="lazy"></p><p>数据窗口管理功能：</p><ol><li>新增、删除数据窗口</li><li>维护数据窗口的SQL、返回字段及其字段配置</li></ol><h1 id="数据窗口管理" tabindex="-1">数据窗口管理 <a class="header-anchor" href="#数据窗口管理" aria-label="Permalink to &quot;数据窗口管理&quot;">​</a></h1><p>在二开平台上通过内置的数据窗口管理功能就能简单维护数据窗口</p><p><img src="'+r+'" alt="" loading="lazy"></p><h1 id="数据窗口使用" tabindex="-1">数据窗口使用 <a class="header-anchor" href="#数据窗口使用" aria-label="Permalink to &quot;数据窗口使用&quot;">​</a></h1><p>数据窗口作为数据源，广泛应用于表单字段和表格列上。下面是一些使用示例。</p><p>在复杂表单上使用数据窗口 <img src="'+_+'" alt="" loading="lazy"></p><p>在查询表单上使用数据窗口 <img src="'+a+'" alt="" loading="lazy"></p><p>在数据表格中使用数据窗口 <img src="'+i+'" alt="" loading="lazy"></p><p>在数据录入场景，数据窗口通过多字段回填功能，简化了用户的操作流程，提高了数据录入的效率。数据窗口作为低代码平台中的一项高级功能，通过其动态列展示、高级查询过滤及多字段回填能力，为应用开发提供了前所未有的灵活性和便捷性。与数据字典相比，它在处理复杂和动态数据需求方面展现出显著优势，是构建高效、用户友好型应用程序的理想工具。通过熟练掌握并应用数据窗口，开发者可以更高效地满足多样化的业务需求，推动低代码应用开发迈上新台阶。</p>',18),d=[p];function c(m,h,g,u,f,x){return l(),e("div",null,d)}const P=t(n,[["render",c]]);export{q as __pageData,P as default};
